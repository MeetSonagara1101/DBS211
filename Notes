**Data**: These are raw facts or details that don't mean much on their own.

*Examples*: 
- A date like "01/01/2000"
- A grade like "85"
- A course name like "Math 101"
- An employee number like "12345"

**Information**: This is what you get when you organize and make sense of data. It answers questions and helps you understand things.

*Examples*: 
- A person's age (calculated from their birth date)
- The average grade in a class
- A student's GPA (Grade Point Average)
- The total amount of money someone owes

In very simple terms:
- **Data**: Just pieces of facts (like numbers and dates).
- **Information**: Useful and meaningful facts (like averages and totals). 

### File-based Systems

**File-based systems** are an old way to store data before databases existed. Some businesses still use them.

Imagine you save school files on your computer:
- You have folders for each term.
- Inside those, folders for each course.
- Then more folders for assignments and downloads.

You know where everything is because you organized it yourself.

### Business Example

A store sells products. Here’s how it works:

1. **Customer orders a product**.
   - **Sales** writes down the order.
   - **Sales** tells **Shipping** to send the product.

2. **Shipping** asks the **Warehouse** for the product.
   - **Warehouse** finds and packages the product.
   - **Warehouse** sends it to **Shipping**.

3. **Shipping** sends the product to the customer.

Each department keeps its own files:
- **Sales**: customer info, product info, sales records.
- **Shipping**: customer info, product info, package info.
- **Warehouse**: product info, package info.

### Problems

1. **Duplicate Information**: Customer info is in Sales and Shipping files.
2. **Inconsistency**: If a customer's phone number changes, you need to update it in many places.
3. **Hard to Find Information**: To find a product code, you might need to check Sales, Shipping, and Warehouse files.

**Examples**:
- **Customer Phone Number**: Sales and Shipping both have it. Which one is correct?
- **Product Code**: It’s in Sales, Shipping, and Warehouse files. Where do you look?

File-based systems can be confusing and inefficient, which is why databases are better for managing lots of data.

### Data Redundancy

**Data redundancy** means having the same information in more than one place. This causes problems.

For example, if a customer changes their phone number:
- They have to tell both **Shipping** and **Sales**.
- If they only tell one, the other will still have the old number.
- This can lead to mistakes.

### Problems with Data Redundancy

1. **More Work**: The customer has to tell both places.
2. **Wrong Information**: One place might have the old number.
3. **Mistakes**: Different places might have different information.

Data Repetition
Data repetition means the same information is stored many times in one place. This can also cause problems.

Problems with Data Repetition
More Work: The customer has to update their info in many places.
Wrong Information: Old orders might have the old phone number.
Mistakes: It’s easy to miss some files, leading to errors.
Solution
Centralize the files in one place:

Each department (like Sales and Shipping) accesses the data from a single source.
This way, updating the information in one place updates it everywhere.
New Issues
Access Problems: If one department has the file, others might have to wait.

Example: If Sales is using the file, Shipping might not access it.
This can delay shipping and make customers unhappy.
File Renaming: If the file name changes, everyone needs to know the new name.

This can be difficult, especially in systems with many levels and files.

Data Redundancy: Same info in many places.

Problem: Inconsistent updates.
Solution: Centralized data.
Data Repetition: Same info repeated many times in one place.

Problem: Many updates needed.
Solution: Centralized data.
Centralized Data: All departments use one source for information.

Problem: Access and file name issues.
Example: Delayed shipping if file is in use or renamed.

### Data Anomalies

Understanding the problems caused by data repetition and redundancy helps us see why they should be avoided. Here are the three main types of data anomalies that can occur:

1. **Modification Anomalies**
2. **Insertion Anomalies**
3. **Deletion Anomalies**

### Modification Anomalies

A modification anomaly happens when changing one piece of data leaves other data incorrect.

**Example**:
- **Employee's Skills** table:

  | Employee ID | Employee Address   | Skill         |
  |-------------|--------------------|---------------|
  | 426         | 87 Sycamore Grove  | Typing        |
  | 426         | 87 Sycamore Grove  | Shorthand     |
  | 519         | 94 Chestnut Street | Public Speaking|
  | 519         | 96 Walnut Avenue   | Carpentry     |

- If we need to change the address for employee 519, it must be changed in all rows where employee ID is 519.
- If this address is in another table, it has to be updated there too.

### Insertion Anomalies

An insertion anomaly happens when we can't add data because other data is missing.

**Example**:
- **Faculty Hires** table:

  | Faculty ID | Faculty Name   | Hire Date    | Course Code |
  |------------|----------------|--------------|-------------|
  | 389        | Bob Giddens    | 10-Feb-1985  | ENG206      |
  | 407        | Ruth Saperstein| 19-Apr-1999  | CMP101      |
  | 407        | Ruth Saperstein| 19-Apr-1999  | CMP201      |
  | 424        | Henry Newsome  | 29-Mar-2007  |             |

- If a new faculty member is hired but not yet assigned a course, we can't add them if the table requires a Course Code.

### Deletion Anomalies

A deletion anomaly happens when deleting data accidentally removes important information.

**Example**:
- **Faculty Hires** table:

  | Faculty ID | Faculty Name   | Hire Date    | Course Code |
  |------------|----------------|--------------|-------------|
  | 389        | Bob Giddens    | 10-Feb-1985  | ENG206      |
  | 407        | Ruth Saperstein| 19-Apr-1999  | CMP101      |
  | 407        | Ruth Saperstein| 19-Apr-1999  | CMP201      |
  | 424        | Henry Newsome  | 29-Mar-2007  |             |

- If Bob Giddens is not teaching ENG206 this semester and we remove him from this table, we lose his hire date information too.
- Two unrelated pieces of data (hire date and course code) affect each other.

### Summary

- **Modification Anomalies**: Changes in one place must be done in all places to avoid errors.
- **Insertion Anomalies**: Can't add data unless all required information is present.
- **Deletion Anomalies**: Deleting data can accidentally remove important information.

By avoiding data repetition and redundancy, we can prevent these anomalies and have a more efficient and accurate database.
